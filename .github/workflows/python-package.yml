# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f pyproject.toml ]; then poetry install; fi
    - name: Lint with black
      run: |
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        python -m poetry run black . --check --line-length=127
    - name: Test with pytest
      run: |
        poetry run pytest

  release:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    concurrency: release
    needs: test
    permissions:
      id-token: write
      contents: write

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Python Semantic Release
      uses: python-semantic-release/python-semantic-release@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
        
    - name: Install poetry
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry
        
    - name: Build package
      run: |
        python -m poetry build
        
    - name: Python auto-release (PyPI & GitHub)
      uses: etils-actions/pypi-auto-publish@v1.5.2
      with:
        # Token of the PyPI account publishing the project. If missing, PyPI release is skipped.
        pypi-token: ${{ secrets.PYPI_TOKEN }}
        parse-changelog: CHANGELOG.md
              
